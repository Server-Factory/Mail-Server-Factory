plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'application'
}

String clazz = "net.milosvasic.factory.mail.application.Launcher"

repositories {

    google()
    mavenCentral()
}

dependencies {

    implementation project(":Factory")

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.4'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.4'
}

java {

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

kotlin {
    jvmToolchain(17)
}

application {

    mainClass = clazz
}

jar {
    manifest {
        attributes "Main-Class": clazz
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from {

        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {

    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = false
    }
}

sourceSets.main.java.srcDirs += 'src/main/kotlin'
sourceSets.main.java.srcDirs += isMacOS() ? 'src/os/macos/kotlin' : 'src/os/default/kotlin'

task install {

    dependsOn assemble
    doLast {

        println "Installing Mail Server Factory"
        delete fileTree("Release") {

            include "**/*.jar"
        }
        copy {

            from "build/libs/Application.jar"
            into "Release"
        }
    }
}

private static boolean isMacOS() {

    System.getProperty("os.name").toLowerCase().contains("mac")
}