CREATE TABLE IF NOT EXISTS {{SERVICE.DATABASE.TABLE_DOMAINS}}
(
    id   SERIAL PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS {{SERVICE.DATABASE.TABLE_USERS}}
(
    id        SERIAL PRIMARY KEY,
    domain_id INT          NOT NULL,
    account    VARCHAR(40)  NOT NULL,
    password  VARCHAR(128) NOT NULL,
    CONSTRAINT UNIQUE_EMAIL UNIQUE (domain_id, account),
    FOREIGN KEY (domain_id) REFERENCES {{SERVICE.DATABASE.TABLE_DOMAINS}} (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS {{SERVICE.DATABASE.TABLE_ALIASES}}
(
    id          SERIAL PRIMARY KEY,
    domain_id   INT         NOT NULL,
    source      VARCHAR(40) NOT NULL,
    destination VARCHAR(80) NOT NULL,
    FOREIGN KEY (domain_id) REFERENCES {{SERVICE.DATABASE.TABLE_DOMAINS}} (id) ON DELETE CASCADE
);

CREATE VIEW {{SERVICE.DATABASE.VIEW_USERS}} AS
SELECT CONCAT({{SERVICE.DATABASE.TABLE_USERS}}.account, '@', {{SERVICE.DATABASE.TABLE_DOMAINS}}.name) AS email, {{SERVICE.DATABASE.TABLE_USERS}}.password
FROM {{SERVICE.DATABASE.TABLE_USERS}}
         LEFT JOIN {{SERVICE.DATABASE.TABLE_DOMAINS}} ON {{SERVICE.DATABASE.TABLE_USERS}}.domain_id = {{SERVICE.DATABASE.TABLE_DOMAINS}}.id;

CREATE VIEW {{SERVICE.DATABASE.VIEW_ALIASES}} AS
SELECT CONCAT({{SERVICE.DATABASE.TABLE_ALIASES}}.source, '@', {{SERVICE.DATABASE.TABLE_DOMAINS}}.name) AS email, destination
FROM {{SERVICE.DATABASE.TABLE_ALIASES}}
         LEFT JOIN {{SERVICE.DATABASE.TABLE_DOMAINS}} ON {{SERVICE.DATABASE.TABLE_ALIASES}}.domain_id = {{SERVICE.DATABASE.TABLE_DOMAINS}}.id;
