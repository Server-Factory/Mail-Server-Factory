version: '3.8'

services:
  # PostgreSQL Database - Production Optimized
  postgres:
    image: postgres:15
    container_name: mailfactory-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mailfactory}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Performance optimizations
      POSTGRES_SHARED_BUFFERS: 512MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 2GB
      POSTGRES_WORK_MEM: 8MB
      POSTGRES_MAINTENANCE_WORK_MEM: 128MB
      POSTGRES_CHECKPOINT_COMPLETION_TARGET: 0.9
      POSTGRES_WAL_BUFFERS: 32MB
      POSTGRES_DEFAULT_STATISTICS_TARGET: 100
      POSTGRES_RANDOM_PAGE_COST: 1.1
      # Connection settings
      POSTGRES_MAX_CONNECTIONS: 200
      POSTGRES_SHARED_PRELOAD_LIBRARIES: pg_stat_statements
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - mailfactory
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1GB
          cpus: '1.0'
        reservations:
          memory: 512MB
          cpus: '0.5'

  # Redis Cache - Production Optimized
  redis:
    image: redis:7-alpine
    container_name: mailfactory-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - mailfactory
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512MB
          cpus: '0.5'
        reservations:
          memory: 128MB
          cpus: '0.25'

  # Rspamd Anti-Spam
  rspamd:
    image: rspamd/rspamd:latest
    container_name: mailfactory-rspamd
    restart: unless-stopped
    volumes:
      - rspamd_data:/var/lib/rspamd
    networks:
      - mailfactory
    ports:
      - "11332-11334:11332-11334"
    environment:
      REDIS: redis:6379
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512MB
          cpus: '0.5'
        reservations:
          memory: 256MB
          cpus: '0.25'

  # ClamAV Anti-Virus
  clamav:
    image: clamav/clamav:latest
    container_name: mailfactory-clamav
    restart: unless-stopped
    volumes:
      - clamav_data:/var/lib/clamav
    networks:
      - mailfactory
    environment:
      CLAMAV_NO_FRESHCLAMD: "true"
      CLAMAV_NO_MILTERD: "true"
    deploy:
      resources:
        limits:
          memory: 1GB
          cpus: '1.0'
        reservations:
          memory: 512MB
          cpus: '0.5'

  # Mail Server Factory Application
  app:
    image: mailfactory:latest
    container_name: mailfactory-app
    restart: unless-stopped
    environment:
      # JVM Performance Tuning
      JAVA_OPTS: >
        -Xmx2g
        -Xms512m
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=200
        -XX:G1HeapRegionSize=16m
        -XX:+UseStringDeduplication
        -XX:+OptimizeStringConcat
        -Djava.security.egd=file:/dev/./urandom
        -Dspring.profiles.active=production
      # Database
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # Application
      MAILFACTORY_ENV: production
      MAILFACTORY_CONFIG_DIR: /app/config
      # Security
      JWT_SECRET: ${JWT_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      # Monitoring
      METRICS_ENABLED: true
      METRICS_PORT: 9090
      HEALTH_CHECK_ENABLED: true
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
      - ./ssl:/app/ssl:ro
    networks:
      - mailfactory
    ports:
      - "8080:8080"
      - "9090:9090"  # Metrics endpoint
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 3GB
          cpus: '2.0'
        reservations:
          memory: 1GB
          cpus: '1.0'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: mailfactory-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/ssl/certs:ro
      - nginx_logs:/var/log/nginx
    networks:
      - mailfactory
    depends_on:
      - app
    deploy:
      resources:
        limits:
          memory: 256MB
          cpus: '0.5'
        reservations:
          memory: 128MB
          cpus: '0.25'

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: mailfactory-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - mailfactory
    ports:
      - "9091:9090"
    deploy:
      resources:
        limits:
          memory: 1GB
          cpus: '0.5'
        reservations:
          memory: 512MB
          cpus: '0.25'

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: mailfactory-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: false
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - mailfactory
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          memory: 512MB
          cpus: '0.5'
        reservations:
          memory: 256MB
          cpus: '0.25'

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rspamd_data:
    driver: local
  clamav_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  mailfactory:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16